name: Django-Docker
on:
  push:  
    branches:
      - main
  pull_request:
    branches:  
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python  
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Cache pip dependencies  
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/backend/*requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  
        pip install -r ./backend/requirements.txt

    - name: Run tests
      run: |  
        python ./backend/manage.py test

    - name: Build images
      run: |
        docker build -t aubreyz/d10be5:${{ github.sha }} ./backend 
        docker build -t aubreyz/d10-fe5:${{ github.sha }} ./frontend
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1    
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push images
      run: |  
        docker push aubreyz/d10be5:${{ github.sha }}
        docker push aubreyz/d10-fe5:${{ github.sha }}
        
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code  
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:   
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Docker Hub
      uses: docker/login-action@v1    
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Deploy to EKS cluster
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        IMAGE_TAG: ${{ github.sha }}
      with:
        args: |
          kubectl apply -f Kubernetes_files/deploymentbe.yaml
          kubectl apply -f Kubernetes_files/deploymentfe.yaml

    - name: Set backend image
      uses: kodermax/kubectl-aws-eks@latest
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

      with:
        args: |
          kubectl set image deployment/backend aubreyz/d10be5:${{ github.sha }}

    - name: Verify backend rollouts  
      uses: kodermax/kubectl-aws-eks@main
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: |
          rollout status deployment/backend
          kubectl get pods -l app=backend


    - name: Update frontend image 
      uses: kodermax/kubectl-aws-eks@main
      env:
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
      args: | 
          set image deployment/frontend aubreyz/d10-fe5:${{ github.sha }}

    - name: Verify frontend rollout
      uses: kodermax/kubectl-aws-eks@main 
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:  
        args: |
          rollout status deployment/frontend
          kubectl get pods -l app=frontend

    - name: Debugging
      run: |
        kubectl get deployments
        kubectl describe deployments/backend
        kubectl describe deployments/frontend