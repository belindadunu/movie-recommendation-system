pipeline {
    agent {label 'awsDeploy2'}
    environment{
        DOCKERHUB_CREDENTIALS = credentials('aubreyz-dockerhub')
        }
    stages{
    stage('Build backend'){
        steps {
            dir('backend'){
            sh 'docker build --no-cache -t aubreyz/d10be25 .'
            }
        }
    }
    stage('Build frontend'){
        steps {
            dir('frontend'){
            sh 'docker build --no-cache -t aubreyz/d10fe25 .'
            }
        }
    }
    stage('Login') {
        steps {
            dir('backend'){
            sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
    }
    stage('Push backend') {
        steps {
            dir('backend'){ 
                sh 'docker push aubreyz/d10be25'
            }
        }
    }
    stage('Push frontend') {
        steps {
            dir('frontend'){ 
                sh 'docker push aubreyz/d10fe25'
            }
        }
    }

    stage('Init') {
        agent {label 'awsDeploy1'}
        steps {
        withCredentials([string(credentialsId: 'AWS_ACCESS_KEY', variable: 'aws_access_key'), 
                        string(credentialsId: 'AWS_SECRET_KEY', variable: 'aws_secret_key')]) {
                            dir('ecsTerraform') {
                              sh 'terraform init' 
                            }
         }
        }
    }

    stage('Plan') {
        agent {label 'awsDeploy1'}
        steps {
        withCredentials([string(credentialsId: 'AWS_ACCESS_KEY', variable: 'aws_access_key'), 
                        string(credentialsId: 'AWS_SECRET_KEY', variable: 'aws_secret_key')]) {
                            dir('ecsTerraform') {
                              sh 'terraform plan -out plan.tfplan -var="aws_access_key=$aws_access_key" -var="aws_secret_key=$aws_secret_key"' 
                            }
         }
        }
    }

      stage('Apply') {
        agent {label 'awsDeploy1'}
       steps {
        withCredentials([string(credentialsId: 'AWS_ACCESS_KEY', variable: 'aws_access_key'), 
                        string(credentialsId: 'AWS_SECRET_KEY', variable: 'aws_secret_key')]) {
                            dir('ecsTerraform') {
                              sh 'terraform apply plan.tfplan' 
                            }
         }
        }
    }

//   stage('Destroy') {
//     agent {label 'awsDeploy2'}
//     steps {
//           withCredentials([string(credentialsId: 'AWS_ACCESS_KEY', variable: 'aws_access_key'),
//               string(credentialsId: 'AWS_SECRET_KEY', variable: 'aws_secret_key')]) {
//                 dir('ecsTerraform') {
//                     sh 'terraform destroy -auto-approve -var="aws_access_key=$aws_access_key" -var="aws_secret_key=$aws_secret_key"'
//                   }
//           }
//     }
// }
}
}
